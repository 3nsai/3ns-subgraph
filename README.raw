# ENS Subgraph

Open the subgraph.yaml file in the root directory of the project
change the network name meaning on which network your smart contract is deployed (check from here cli-name https://thegraph.com/docs/en/developing/supported-networks/)
network: cli-name
example
network: mbase

now chnage the smart contract address & startBlock (usually contract creation block) in dataSources like below

- kind: ethereum/contract
  name: MetadataService
  network: mbase
  source:
  address: "YOUR_METADATA_SERVICE_ADDRESS"
  abi: MetadataService
  startBlock: SMART_CONTRACT_CREATION_BLOCK
  mapping:
  kind: ethereum/events
  apiVersion: 0.0.6
  language: wasm/assemblyscript
  file: ./src/MetadataService.ts
  entities: - MetadataService
  abis: - name: MetadataService
  file: ./abis/MetadataService.json
  eventHandlers: - event: "MetadataUpdate(uint256,string)"
  handler: handleMetadataUpdate
  note:
  Before replacing address & startBlock make sure that you are replacing with the correct one, see the name before replacing it
  same do for the other smart contract

example

- kind: ethereum/contract
  name: MetadataService
  network: mbase
  source:
  address: "0x452606a3176441753776766DBb51AE85136f4148"
  abi: MetadataService
  startBlock: 8883486
  mapping:
  kind: ethereum/events
  apiVersion: 0.0.6
  language: wasm/assemblyscript
  file: ./src/MetadataService.ts
  entities: - MetadataService
  abis: - name: MetadataService
  file: ./abis/MetadataService.json
  eventHandlers: - event: "MetadataUpdate(uint256,string)"
  handler: handleMetadataUpdate

open src/utils.ts file and change the following

export const ETH_NODE_TEXT = ".YOUR_DOMAIN";
export const ETH_NODE = "NAMEHASH_OF_YOUR_DOMAIN";

example

export const ETH_NODE_TEXT = ".ns3";
export const ETH_NODE = "0x212790ef3397c94de29376f58ecc41f1267661e3453d54551570a5dfb58d630d";

TO generate types run
npm run codegen

to build the subgraph, run
npm run build

to deply the subgraph first you need to authenticate, you can get the authentication command with key from the subgraph project it will be like something below

graph auth --studio YOUR_KEY

after than deploy the subgraph, this command will also be there, you can compy from there or according to the this subgraph it is given as below

npm run deploy (or from the thegraph.com's created project deploy command)

graph deploy --studio 3ns

after running the below command your subgraph will be deployed
